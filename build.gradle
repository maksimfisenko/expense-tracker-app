plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.sonarqube' version '5.0.0.4638'
	id 'jacoco'
}

group = 'dev.app'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	annotationProcessor 'org.hibernate.orm:hibernate-jpamodelgen'

	implementation 'io.github.cdimascio:java-dotenv:5.2.2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

}

tasks.named('test') {
	useJUnitPlatform()
}

sonar {
	properties {
		property 'sonar.host.url', 'http://localhost:9000'
		property 'sonar.token', 'sqp_1b0599a0c72e593e5b554b2c23f0c230ef042051'
	}
}


jacocoTestReport {
	reports {
		xml.setRequired(true)
	}
	dependsOn test
}
